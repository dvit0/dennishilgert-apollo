// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: apollo/proto/registry/v1/registry.proto

package registrypb

import (
	v1 "github.com/dennishilgert/apollo/pkg/proto/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InstanceType int32

const (
	InstanceType_INSTANCE_TYPE_UNSPECIFIED InstanceType = 0
	InstanceType_FLEET_MANAGER             InstanceType = 1
	InstanceType_WORKER_MANAGER            InstanceType = 2
)

// Enum value maps for InstanceType.
var (
	InstanceType_name = map[int32]string{
		0: "INSTANCE_TYPE_UNSPECIFIED",
		1: "FLEET_MANAGER",
		2: "WORKER_MANAGER",
	}
	InstanceType_value = map[string]int32{
		"INSTANCE_TYPE_UNSPECIFIED": 0,
		"FLEET_MANAGER":             1,
		"WORKER_MANAGER":            2,
	}
)

func (x InstanceType) Enum() *InstanceType {
	p := new(InstanceType)
	*p = x
	return p
}

func (x InstanceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceType) Descriptor() protoreflect.EnumDescriptor {
	return file_apollo_proto_registry_v1_registry_proto_enumTypes[0].Descriptor()
}

func (InstanceType) Type() protoreflect.EnumType {
	return &file_apollo_proto_registry_v1_registry_proto_enumTypes[0]
}

func (x InstanceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceType.Descriptor instead.
func (InstanceType) EnumDescriptor() ([]byte, []int) {
	return file_apollo_proto_registry_v1_registry_proto_rawDescGZIP(), []int{0}
}

type Function struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Function) Reset() {
	*x = Function{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Function) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Function) ProtoMessage() {}

func (x *Function) ProtoReflect() protoreflect.Message {
	mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Function.ProtoReflect.Descriptor instead.
func (*Function) Descriptor() ([]byte, []int) {
	return file_apollo_proto_registry_v1_registry_proto_rawDescGZIP(), []int{0}
}

func (x *Function) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ServiceInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceUuid string           `protobuf:"bytes,1,opt,name=instance_uuid,json=instanceUuid,proto3" json:"instance_uuid,omitempty"`
	InstanceType InstanceType     `protobuf:"varint,2,opt,name=instance_type,json=instanceType,proto3,enum=apollo.proto.registry.v1.InstanceType" json:"instance_type,omitempty"`
	Host         string           `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Port         int32            `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Metadata     *structpb.Struct `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ServiceInstance) Reset() {
	*x = ServiceInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInstance) ProtoMessage() {}

func (x *ServiceInstance) ProtoReflect() protoreflect.Message {
	mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInstance.ProtoReflect.Descriptor instead.
func (*ServiceInstance) Descriptor() ([]byte, []int) {
	return file_apollo_proto_registry_v1_registry_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceInstance) GetInstanceUuid() string {
	if x != nil {
		return x.InstanceUuid
	}
	return ""
}

func (x *ServiceInstance) GetInstanceType() InstanceType {
	if x != nil {
		return x.InstanceType
	}
	return InstanceType_INSTANCE_TYPE_UNSPECIFIED
}

func (x *ServiceInstance) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ServiceInstance) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ServiceInstance) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type WorkerInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerUuid           string      `protobuf:"bytes,1,opt,name=worker_uuid,json=workerUuid,proto3" json:"worker_uuid,omitempty"`
	Architecture         string      `protobuf:"bytes,2,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Host                 string      `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32       `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	InitializedFunctions []*Function `protobuf:"bytes,5,rep,name=initialized_functions,json=initializedFunctions,proto3" json:"initialized_functions,omitempty"`
}

func (x *WorkerInstance) Reset() {
	*x = WorkerInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerInstance) ProtoMessage() {}

func (x *WorkerInstance) ProtoReflect() protoreflect.Message {
	mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerInstance.ProtoReflect.Descriptor instead.
func (*WorkerInstance) Descriptor() ([]byte, []int) {
	return file_apollo_proto_registry_v1_registry_proto_rawDescGZIP(), []int{2}
}

func (x *WorkerInstance) GetWorkerUuid() string {
	if x != nil {
		return x.WorkerUuid
	}
	return ""
}

func (x *WorkerInstance) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *WorkerInstance) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *WorkerInstance) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *WorkerInstance) GetInitializedFunctions() []*Function {
	if x != nil {
		return x.InitializedFunctions
	}
	return nil
}

type ServiceInstanceMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuUsage    int32 `protobuf:"varint,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage int32 `protobuf:"varint,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
}

func (x *ServiceInstanceMetrics) Reset() {
	*x = ServiceInstanceMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInstanceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInstanceMetrics) ProtoMessage() {}

func (x *ServiceInstanceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInstanceMetrics.ProtoReflect.Descriptor instead.
func (*ServiceInstanceMetrics) Descriptor() ([]byte, []int) {
	return file_apollo_proto_registry_v1_registry_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceInstanceMetrics) GetCpuUsage() int32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *ServiceInstanceMetrics) GetMemoryUsage() int32 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

type WorkerInstanceMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuUsage            int32 `protobuf:"varint,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage         int32 `protobuf:"varint,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	StorageUsage        int32 `protobuf:"varint,3,opt,name=storage_usage,json=storageUsage,proto3" json:"storage_usage,omitempty"`
	LightFunctionsLoad  int32 `protobuf:"varint,4,opt,name=light_functions_load,json=lightFunctionsLoad,proto3" json:"light_functions_load,omitempty"`
	MediumFunctionsLoad int32 `protobuf:"varint,5,opt,name=medium_functions_load,json=mediumFunctionsLoad,proto3" json:"medium_functions_load,omitempty"`
	HeavyFunctionsLoad  int32 `protobuf:"varint,6,opt,name=heavy_functions_load,json=heavyFunctionsLoad,proto3" json:"heavy_functions_load,omitempty"`
}

func (x *WorkerInstanceMetrics) Reset() {
	*x = WorkerInstanceMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerInstanceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerInstanceMetrics) ProtoMessage() {}

func (x *WorkerInstanceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerInstanceMetrics.ProtoReflect.Descriptor instead.
func (*WorkerInstanceMetrics) Descriptor() ([]byte, []int) {
	return file_apollo_proto_registry_v1_registry_proto_rawDescGZIP(), []int{4}
}

func (x *WorkerInstanceMetrics) GetCpuUsage() int32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *WorkerInstanceMetrics) GetMemoryUsage() int32 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *WorkerInstanceMetrics) GetStorageUsage() int32 {
	if x != nil {
		return x.StorageUsage
	}
	return 0
}

func (x *WorkerInstanceMetrics) GetLightFunctionsLoad() int32 {
	if x != nil {
		return x.LightFunctionsLoad
	}
	return 0
}

func (x *WorkerInstanceMetrics) GetMediumFunctionsLoad() int32 {
	if x != nil {
		return x.MediumFunctionsLoad
	}
	return 0
}

func (x *WorkerInstanceMetrics) GetHeavyFunctionsLoad() int32 {
	if x != nil {
		return x.HeavyFunctionsLoad
	}
	return 0
}

type AcquireLeaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Instance:
	//
	//	*AcquireLeaseRequest_ServiceInstance
	//	*AcquireLeaseRequest_WorkerInstance
	Instance isAcquireLeaseRequest_Instance `protobuf_oneof:"instance"`
	// Types that are assignable to Metrics:
	//
	//	*AcquireLeaseRequest_ServiceInstanceMetrics
	//	*AcquireLeaseRequest_WorkerInstanceMetrics
	Metrics isAcquireLeaseRequest_Metrics `protobuf_oneof:"metrics"`
}

func (x *AcquireLeaseRequest) Reset() {
	*x = AcquireLeaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLeaseRequest) ProtoMessage() {}

func (x *AcquireLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireLeaseRequest.ProtoReflect.Descriptor instead.
func (*AcquireLeaseRequest) Descriptor() ([]byte, []int) {
	return file_apollo_proto_registry_v1_registry_proto_rawDescGZIP(), []int{5}
}

func (m *AcquireLeaseRequest) GetInstance() isAcquireLeaseRequest_Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (x *AcquireLeaseRequest) GetServiceInstance() *ServiceInstance {
	if x, ok := x.GetInstance().(*AcquireLeaseRequest_ServiceInstance); ok {
		return x.ServiceInstance
	}
	return nil
}

func (x *AcquireLeaseRequest) GetWorkerInstance() *WorkerInstance {
	if x, ok := x.GetInstance().(*AcquireLeaseRequest_WorkerInstance); ok {
		return x.WorkerInstance
	}
	return nil
}

func (m *AcquireLeaseRequest) GetMetrics() isAcquireLeaseRequest_Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (x *AcquireLeaseRequest) GetServiceInstanceMetrics() *ServiceInstanceMetrics {
	if x, ok := x.GetMetrics().(*AcquireLeaseRequest_ServiceInstanceMetrics); ok {
		return x.ServiceInstanceMetrics
	}
	return nil
}

func (x *AcquireLeaseRequest) GetWorkerInstanceMetrics() *WorkerInstanceMetrics {
	if x, ok := x.GetMetrics().(*AcquireLeaseRequest_WorkerInstanceMetrics); ok {
		return x.WorkerInstanceMetrics
	}
	return nil
}

type isAcquireLeaseRequest_Instance interface {
	isAcquireLeaseRequest_Instance()
}

type AcquireLeaseRequest_ServiceInstance struct {
	ServiceInstance *ServiceInstance `protobuf:"bytes,1,opt,name=service_instance,json=serviceInstance,proto3,oneof"`
}

type AcquireLeaseRequest_WorkerInstance struct {
	WorkerInstance *WorkerInstance `protobuf:"bytes,2,opt,name=worker_instance,json=workerInstance,proto3,oneof"`
}

func (*AcquireLeaseRequest_ServiceInstance) isAcquireLeaseRequest_Instance() {}

func (*AcquireLeaseRequest_WorkerInstance) isAcquireLeaseRequest_Instance() {}

type isAcquireLeaseRequest_Metrics interface {
	isAcquireLeaseRequest_Metrics()
}

type AcquireLeaseRequest_ServiceInstanceMetrics struct {
	ServiceInstanceMetrics *ServiceInstanceMetrics `protobuf:"bytes,3,opt,name=service_instance_metrics,json=serviceInstanceMetrics,proto3,oneof"`
}

type AcquireLeaseRequest_WorkerInstanceMetrics struct {
	WorkerInstanceMetrics *WorkerInstanceMetrics `protobuf:"bytes,4,opt,name=worker_instance_metrics,json=workerInstanceMetrics,proto3,oneof"`
}

func (*AcquireLeaseRequest_ServiceInstanceMetrics) isAcquireLeaseRequest_Metrics() {}

func (*AcquireLeaseRequest_WorkerInstanceMetrics) isAcquireLeaseRequest_Metrics() {}

type ReleaseLeaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceUuid string       `protobuf:"bytes,1,opt,name=instance_uuid,json=instanceUuid,proto3" json:"instance_uuid,omitempty"`
	InstanceType InstanceType `protobuf:"varint,2,opt,name=instance_type,json=instanceType,proto3,enum=apollo.proto.registry.v1.InstanceType" json:"instance_type,omitempty"`
}

func (x *ReleaseLeaseRequest) Reset() {
	*x = ReleaseLeaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseLeaseRequest) ProtoMessage() {}

func (x *ReleaseLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseLeaseRequest.ProtoReflect.Descriptor instead.
func (*ReleaseLeaseRequest) Descriptor() ([]byte, []int) {
	return file_apollo_proto_registry_v1_registry_proto_rawDescGZIP(), []int{6}
}

func (x *ReleaseLeaseRequest) GetInstanceUuid() string {
	if x != nil {
		return x.InstanceUuid
	}
	return ""
}

func (x *ReleaseLeaseRequest) GetInstanceType() InstanceType {
	if x != nil {
		return x.InstanceType
	}
	return InstanceType_INSTANCE_TYPE_UNSPECIFIED
}

type AvailableInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceType InstanceType `protobuf:"varint,1,opt,name=instance_type,json=instanceType,proto3,enum=apollo.proto.registry.v1.InstanceType" json:"instance_type,omitempty"`
}

func (x *AvailableInstanceRequest) Reset() {
	*x = AvailableInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableInstanceRequest) ProtoMessage() {}

func (x *AvailableInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableInstanceRequest.ProtoReflect.Descriptor instead.
func (*AvailableInstanceRequest) Descriptor() ([]byte, []int) {
	return file_apollo_proto_registry_v1_registry_proto_rawDescGZIP(), []int{7}
}

func (x *AvailableInstanceRequest) GetInstanceType() InstanceType {
	if x != nil {
		return x.InstanceType
	}
	return InstanceType_INSTANCE_TYPE_UNSPECIFIED
}

type AvailableInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *ServiceInstance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *AvailableInstanceResponse) Reset() {
	*x = AvailableInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableInstanceResponse) ProtoMessage() {}

func (x *AvailableInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apollo_proto_registry_v1_registry_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableInstanceResponse.ProtoReflect.Descriptor instead.
func (*AvailableInstanceResponse) Descriptor() ([]byte, []int) {
	return file_apollo_proto_registry_v1_registry_proto_rawDescGZIP(), []int{8}
}

func (x *AvailableInstanceResponse) GetInstance() *ServiceInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

var File_apollo_proto_registry_v1_registry_proto protoreflect.FileDescriptor

var file_apollo_proto_registry_v1_registry_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x61, 0x70, 0x6f, 0x6c, 0x6c,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x23, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xe0, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x4b, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd6, 0x01, 0x0a, 0x0e, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x57, 0x0a, 0x15, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6c,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x58, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0x94, 0x02, 0x0a,
	0x15, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x32, 0x0a,
	0x15, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6d, 0x65,
	0x64, 0x69, 0x75, 0x6d, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x6f, 0x61,
	0x64, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x65, 0x61, 0x76, 0x79, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x68, 0x65, 0x61, 0x76, 0x79, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c,
	0x6f, 0x61, 0x64, 0x22, 0xb2, 0x03, 0x0a, 0x13, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x10, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x18, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x6f,
	0x6c, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x48, 0x01, 0x52, 0x16,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x69, 0x0a, 0x17, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x48, 0x01, 0x52, 0x15, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x42, 0x0a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61,
	0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x67, 0x0a, 0x18, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b,
	0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x62, 0x0a, 0x19, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x6f,
	0x6c, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2a,
	0x54, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x19, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x46, 0x4c, 0x45, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x41,
	0x47, 0x45, 0x52, 0x10, 0x02, 0x32, 0xe9, 0x02, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x66, 0x0a, 0x0c, 0x41, 0x63, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x6f, 0x6c,
	0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6c,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x18, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x6f,
	0x6c, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x64, 0x65, 0x6e, 0x6e, 0x69, 0x73, 0x68, 0x69, 0x6c, 0x67, 0x65, 0x72, 0x74, 0x2f, 0x61, 0x70,
	0x6f, 0x6c, 0x6c, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apollo_proto_registry_v1_registry_proto_rawDescOnce sync.Once
	file_apollo_proto_registry_v1_registry_proto_rawDescData = file_apollo_proto_registry_v1_registry_proto_rawDesc
)

func file_apollo_proto_registry_v1_registry_proto_rawDescGZIP() []byte {
	file_apollo_proto_registry_v1_registry_proto_rawDescOnce.Do(func() {
		file_apollo_proto_registry_v1_registry_proto_rawDescData = protoimpl.X.CompressGZIP(file_apollo_proto_registry_v1_registry_proto_rawDescData)
	})
	return file_apollo_proto_registry_v1_registry_proto_rawDescData
}

var file_apollo_proto_registry_v1_registry_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_apollo_proto_registry_v1_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_apollo_proto_registry_v1_registry_proto_goTypes = []interface{}{
	(InstanceType)(0),                 // 0: apollo.proto.registry.v1.InstanceType
	(*Function)(nil),                  // 1: apollo.proto.registry.v1.Function
	(*ServiceInstance)(nil),           // 2: apollo.proto.registry.v1.ServiceInstance
	(*WorkerInstance)(nil),            // 3: apollo.proto.registry.v1.WorkerInstance
	(*ServiceInstanceMetrics)(nil),    // 4: apollo.proto.registry.v1.ServiceInstanceMetrics
	(*WorkerInstanceMetrics)(nil),     // 5: apollo.proto.registry.v1.WorkerInstanceMetrics
	(*AcquireLeaseRequest)(nil),       // 6: apollo.proto.registry.v1.AcquireLeaseRequest
	(*ReleaseLeaseRequest)(nil),       // 7: apollo.proto.registry.v1.ReleaseLeaseRequest
	(*AvailableInstanceRequest)(nil),  // 8: apollo.proto.registry.v1.AvailableInstanceRequest
	(*AvailableInstanceResponse)(nil), // 9: apollo.proto.registry.v1.AvailableInstanceResponse
	(*structpb.Struct)(nil),           // 10: google.protobuf.Struct
	(*v1.EmptyResponse)(nil),          // 11: apollo.proto.shared.v1.EmptyResponse
}
var file_apollo_proto_registry_v1_registry_proto_depIdxs = []int32{
	0,  // 0: apollo.proto.registry.v1.ServiceInstance.instance_type:type_name -> apollo.proto.registry.v1.InstanceType
	10, // 1: apollo.proto.registry.v1.ServiceInstance.metadata:type_name -> google.protobuf.Struct
	1,  // 2: apollo.proto.registry.v1.WorkerInstance.initialized_functions:type_name -> apollo.proto.registry.v1.Function
	2,  // 3: apollo.proto.registry.v1.AcquireLeaseRequest.service_instance:type_name -> apollo.proto.registry.v1.ServiceInstance
	3,  // 4: apollo.proto.registry.v1.AcquireLeaseRequest.worker_instance:type_name -> apollo.proto.registry.v1.WorkerInstance
	4,  // 5: apollo.proto.registry.v1.AcquireLeaseRequest.service_instance_metrics:type_name -> apollo.proto.registry.v1.ServiceInstanceMetrics
	5,  // 6: apollo.proto.registry.v1.AcquireLeaseRequest.worker_instance_metrics:type_name -> apollo.proto.registry.v1.WorkerInstanceMetrics
	0,  // 7: apollo.proto.registry.v1.ReleaseLeaseRequest.instance_type:type_name -> apollo.proto.registry.v1.InstanceType
	0,  // 8: apollo.proto.registry.v1.AvailableInstanceRequest.instance_type:type_name -> apollo.proto.registry.v1.InstanceType
	2,  // 9: apollo.proto.registry.v1.AvailableInstanceResponse.instance:type_name -> apollo.proto.registry.v1.ServiceInstance
	6,  // 10: apollo.proto.registry.v1.ServiceRegistry.AcquireLease:input_type -> apollo.proto.registry.v1.AcquireLeaseRequest
	7,  // 11: apollo.proto.registry.v1.ServiceRegistry.ReleaseLease:input_type -> apollo.proto.registry.v1.ReleaseLeaseRequest
	8,  // 12: apollo.proto.registry.v1.ServiceRegistry.AvailableServiceInstance:input_type -> apollo.proto.registry.v1.AvailableInstanceRequest
	11, // 13: apollo.proto.registry.v1.ServiceRegistry.AcquireLease:output_type -> apollo.proto.shared.v1.EmptyResponse
	11, // 14: apollo.proto.registry.v1.ServiceRegistry.ReleaseLease:output_type -> apollo.proto.shared.v1.EmptyResponse
	9,  // 15: apollo.proto.registry.v1.ServiceRegistry.AvailableServiceInstance:output_type -> apollo.proto.registry.v1.AvailableInstanceResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_apollo_proto_registry_v1_registry_proto_init() }
func file_apollo_proto_registry_v1_registry_proto_init() {
	if File_apollo_proto_registry_v1_registry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apollo_proto_registry_v1_registry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Function); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apollo_proto_registry_v1_registry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apollo_proto_registry_v1_registry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apollo_proto_registry_v1_registry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInstanceMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apollo_proto_registry_v1_registry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerInstanceMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apollo_proto_registry_v1_registry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireLeaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apollo_proto_registry_v1_registry_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseLeaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apollo_proto_registry_v1_registry_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apollo_proto_registry_v1_registry_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_apollo_proto_registry_v1_registry_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*AcquireLeaseRequest_ServiceInstance)(nil),
		(*AcquireLeaseRequest_WorkerInstance)(nil),
		(*AcquireLeaseRequest_ServiceInstanceMetrics)(nil),
		(*AcquireLeaseRequest_WorkerInstanceMetrics)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apollo_proto_registry_v1_registry_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apollo_proto_registry_v1_registry_proto_goTypes,
		DependencyIndexes: file_apollo_proto_registry_v1_registry_proto_depIdxs,
		EnumInfos:         file_apollo_proto_registry_v1_registry_proto_enumTypes,
		MessageInfos:      file_apollo_proto_registry_v1_registry_proto_msgTypes,
	}.Build()
	File_apollo_proto_registry_v1_registry_proto = out.File
	file_apollo_proto_registry_v1_registry_proto_rawDesc = nil
	file_apollo_proto_registry_v1_registry_proto_goTypes = nil
	file_apollo_proto_registry_v1_registry_proto_depIdxs = nil
}
