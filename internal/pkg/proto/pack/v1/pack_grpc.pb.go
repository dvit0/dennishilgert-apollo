// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.2
// source: apollo/proto/pack/v1/pack.proto

package packpb

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// PackageClient is the client API for Package service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PackageClient interface {
}

type packageClient struct {
	cc grpc.ClientConnInterface
}

func NewPackageClient(cc grpc.ClientConnInterface) PackageClient {
	return &packageClient{cc}
}

// PackageServer is the server API for Package service.
// All implementations should embed UnimplementedPackageServer
// for forward compatibility
type PackageServer interface {
}

// UnimplementedPackageServer should be embedded to have forward compatible implementations.
type UnimplementedPackageServer struct {
}

// UnsafePackageServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PackageServer will
// result in compilation errors.
type UnsafePackageServer interface {
	mustEmbedUnimplementedPackageServer()
}

func RegisterPackageServer(s grpc.ServiceRegistrar, srv PackageServer) {
	s.RegisterService(&Package_ServiceDesc, srv)
}

// Package_ServiceDesc is the grpc.ServiceDesc for Package service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Package_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "apollo.proto.pack.v1.Package",
	HandlerType: (*PackageServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "apollo/proto/pack/v1/pack.proto",
}
