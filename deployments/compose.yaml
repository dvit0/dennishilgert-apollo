version: "3.9"

services:
  apollo-messaging:
    container_name: kafka
    image: docker.io/bitnami/kafka:3.7
    volumes:
      - "kafka_data:/bitnami"
    ports:
      - "9092:9092"
    restart: always
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://10.71.29.50:9092 # Replace this ip address with the ip address where kafka is reachable - not localhost.
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  apollo-storage:
    container_name: minio
    image: bitnami/minio:latest
    volumes:
      - "minio_data:/bitnami/minio/data"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=7dbcf34172f78a6719f410a64bdb94fc

  apollo-cache:
    container_name: redis
    image: redis:latest
    command: redis-server --notify-keyspace-events KEA
    ports:
      - "6379:6379"
    restart: always

  apollo-image-registry:
    container_name: image-registry
    image: registry:2
    volumes:
      - "image_registry_data:/var/lib/registry"
    ports:
      - "5000:5000"
    restart: always

  image-registry-ui:
    container_name: image-registry-ui
    image: konradkleine/docker-registry-frontend:v2
    ports:
      - "5001:80"
    restart: always
    environment:
      - ENV_DOCKER_REGISTRY_HOST=image-registry
      - ENV_DOCKER_REGISTRY_PORT=5000

volumes:
  image_registry_data:
    driver: local
  kafka_data:
    driver: local
  minio_data:
    driver: local