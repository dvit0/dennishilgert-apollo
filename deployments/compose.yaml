version: "3.9"

services:
  apollo-kafka:
    container_name: apollo-kafka
    image: bitnami/kafka:3.7
    volumes:
      - "kafka_data:/bitnami"
    ports:
      - "9092:9092"
    restart: always
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@apollo-kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://10.71.29.50:9092 # Replace this ip address with the ip address where kafka is reachable - not localhost.
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  apollo-minio:
    container_name: apollo-minio
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    volumes:
      - "minio_data:/data"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=7dbcf34172f78a6719f410a64bdb94fc
      - MINIO_NOTIFY_KAFKA_ENABLE_apollo_function_upload=on
      - MINIO_NOTIFY_KAFKA_BROKERS_apollo_function_upload=10.71.29.50:9092
      - MINIO_NOTIFY_KAFKA_TOPIC_apollo_function_upload=apollo_function_code_uploaded

  # apollo-minio-mc:
  #   container_name: apollo-minio-mc
  #   image: minio/mc:latest
  #   depends_on:
  #     - apollo-minio
  #   entrypoint: >
  #     /bin/sh -c "
  #     /usr/bin/mc alias set minio http://apollo-minio:9000 root 7dbcf34172f78a6719f410a64bdb94fc;
  #     /usr/bin/mc mb minio/apollo-kernels;
  #     /usr/bin/mc mb minio/apollo-functions;
  #     /usr/bin/mc mb minio/apollo-dependencies;
  #     /usr/bin/mc admin config set minio notify_kafka:apollo-fn-upload brokers='10.71.29.50:9092' topic='apollo_function_code_uploaded' queue_dir='' queue_limit='0' enable='on';
  #     /usr/bin/mc admin service restart minio;
  #     /usr/bin/mc event add minio/apollo-functions arn:minio:sqs::apollo-fn-upload:kafka --event put;
  #     exit 0;
  #     "

  apollo-postgres:
    container_name: apollo-postgres
    image: postgres:latest
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    ports:
      - "5434:5432" # Changed temporarily from 5432 to 5434 to avoid conflict with local postgres
    restart: always
    environment:
      - POSTGRES_USER=apollo
      - POSTGRES_PASSWORD=8k2u2GF2tsv2tVRCS025481zbGHAsd23
      - POSTGRES_DB=apollo

  apollo-redis:
    container_name: apollo-redis
    image: redis:latest
    command: redis-server --notify-keyspace-events KEA
    ports:
      - "6380:6379" # Changed temporarily from 6379 to 6380 to avoid conflict with local redis
    restart: always

  apollo-image-registry:
    container_name: apollo-image-registry
    image: registry:2
    volumes:
      - "image_registry_data:/var/lib/registry"
    ports:
      - "5000:5000"
    restart: always

  apollo-image-registry-ui:
    container_name: apollo-image-registry-ui
    image: konradkleine/docker-registry-frontend:v2
    ports:
      - "5001:80"
    restart: always
    environment:
      - ENV_DOCKER_REGISTRY_HOST=apollo-image-registry
      - ENV_DOCKER_REGISTRY_PORT=5000

volumes:
  image_registry_data:
    driver: local
  kafka_data:
    driver: local
  minio_data:
    driver: local
  postgres_data:
    driver: local