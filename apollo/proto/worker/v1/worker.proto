syntax = "proto3";

package apollo.proto.worker.v1;

import "apollo/proto/shared/v1/shared.proto";
import "apollo/proto/fleet/v1/fleet.proto";

option go_package = "github.com/dennishilgert/apollo/pkg/proto/worker/v1;workerpb";

service WorkerManager {
  rpc InitializeFunction(InitializeFunctionRequest) returns (apollo.proto.shared.v1.EmptyResponse) {}
  rpc AllocateInvocation(AllocateInvocationRequest) returns (AllocateInvocationResponse) {}
}

message InitializeFunctionRequest {
  string function_uuid = 1;
  apollo.proto.fleet.v1.KernelSpecs kernel = 2;
  apollo.proto.fleet.v1.RuntimeSpecs runtime = 3;
  apollo.proto.fleet.v1.MachineSpecs machine = 4;
}

message AllocateInvocationRequest {
  string function_uuid = 1;
  apollo.proto.fleet.v1.KernelSpecs kernel = 2;
  apollo.proto.fleet.v1.RuntimeExecutionSpecs runtime = 3;
  apollo.proto.fleet.v1.MachineSpecs machine = 4;
}

message AllocateInvocationResponse {
  string runner_uuid = 1;
  string worker_node_address = 2;
}