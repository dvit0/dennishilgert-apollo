syntax = "proto3";

package apollo.proto.frontend.v1;

import "google/protobuf/struct.proto";
import "apollo/proto/shared/v1/shared.proto";
import "apollo/proto/fleet/v1/fleet.proto";

option go_package = "github.com/dennishilgert/apollo/internal/pkg/proto/frontend/v1;frontendpb";

service Frontend {
  rpc InvokeFunction(InvokeFunctionRequest) returns (apollo.proto.fleet.v1.InvokeFunctionResponse) {}

  rpc AddKernel(AddKernelRequest) returns (apollo.proto.shared.v1.EmptyResponse) {}
  rpc ListKernels(ListKernelsRequest) returns (ListKernelsResponse) {}
  rpc RemoveKernel(RemoveKernelRequest) returns (apollo.proto.shared.v1.EmptyResponse) {}

  rpc AddRuntime(AddRuntimeRequest) returns (apollo.proto.shared.v1.EmptyResponse) {}
  rpc ListRuntimes(ListRuntimesRequest) returns (ListRuntimesResponse) {}
  rpc RemoveRuntime(RemoveRuntimeRequest) returns (apollo.proto.shared.v1.EmptyResponse) {}

  rpc CreateFunction(CreateFunctionRequest) returns (CreateFunctionResponse) {}
  rpc GetFunction(GetFunctionRequest) returns (GetFunctionResponse) {}
  rpc ListFunctions(ListFunctionsRequest) returns (ListFunctionsResponse) {}
  rpc GetFunctionCodeUploadUrl(FunctionCodeUploadUrlRequest) returns (FunctionCodeUploadUrlResponse) {}
  rpc UpdateFunctionRuntime(UpdateFunctionRuntimeRequest) returns (apollo.proto.shared.v1.EmptyResponse) {}
  rpc UpdateFunctionResources(UpdateFunctionResourcesRequest) returns (apollo.proto.shared.v1.EmptyResponse) {}
  rpc DeleteFunction(DeleteFunctionRequest) returns (apollo.proto.shared.v1.EmptyResponse) {}
}

enum FunctionStatus {
  FUNCTION_STATUS_UNSPECIFIED = 0;
  CREATED = 1;
  PACKED = 2;
  PACKING_FAILED = 3;
  INITIALIZED = 4;
  INITIALIZAION_FAILED = 5;
}

message KernelSpecs {
  string name = 1;
  string version = 2;
  string architecture = 3;
}

message RuntimeSpecs {
  string name = 1;
  string version = 2;
  string binary_path = 3;
  repeated string binary_args = 4;
  string display_name = 5;
  string default_handler = 6;
  int32 default_memory_limit = 7;
  int32 default_v_cpu_cores = 8;
  string kernel_name = 9;
  string kernel_version = 10;
  string kernel_architecture = 11;
}

message FunctionSpecs {
  string uuid = 1;
  string name = 2;
  string version = 3;
  string handler = 4;
  int32 memory_limit = 5;
  int32 v_cpu_cores = 6;
  FunctionStatus status = 7;
  int32 idle_ttl = 8;
  string log_level = 9;
  string runtime_name = 10;
  string runtime_version = 11;
  string runtime_architecture = 12;
  string runtime_display_name = 13;
  string http_trigger_id = 14;
}

message EventSpecs {
  string type = 1;
  string source_ip = 2;
  map<string, string> headers = 3;
  map<string, string> params = 4;
  google.protobuf.Struct payload = 5;
}

message InvokeFunctionRequest {
  string http_trigger_id = 1;
  EventSpecs event = 2;
}

message AddKernelRequest {
  KernelSpecs kernel = 1;
}

message ListKernelsRequest {}

message ListKernelsResponse {
  repeated KernelSpecs kernels = 1;
}

message RemoveKernelRequest {
  string name = 1;
  string version = 2;
  string architecture = 3;
}

message AddRuntimeRequest {
  RuntimeSpecs runtime = 1;
}

message ListRuntimesRequest {}

message ListRuntimesResponse {
  repeated RuntimeSpecs runtimes = 1;
}

message RemoveRuntimeRequest {
  string name = 1;
  string version = 2;
  string architecture = 3;
}

message CreateFunctionRequest {
  string name = 1;
  string runtime_name = 2;
  string runtime_version = 3;
  string runtime_architecture = 4;
}

message CreateFunctionResponse {
  string uuid = 1;
}

message GetFunctionRequest {
  string uuid = 1;
}

message GetFunctionResponse {
  FunctionSpecs function = 1;
}

message ListFunctionsRequest {}

message ListFunctionsResponse {
  repeated FunctionSpecs functions = 1;
}

message FunctionCodeUploadUrlRequest {
  string uuid = 1;
}

message FunctionCodeUploadUrlResponse {
  string presigned_upload_url = 1;
}

message UpdateFunctionRuntimeRequest {
  string uuid = 1;
  string handler = 2;
  string runtime_name = 3;
  string runtime_version = 4;
  string runtime_architecture = 5;
}

message UpdateFunctionResourcesRequest {
  string uuid = 1;
  int32 memory_limit = 2;
  int32 v_cpu_cores = 3;
}

message DeleteFunctionRequest {
  string uuid = 1;
}