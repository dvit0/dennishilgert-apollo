syntax = "proto3";

package apollo.proto.fleet.v1;

import "google/protobuf/struct.proto";
import "apollo/proto/shared/v1/shared.proto";

option go_package = "github.com/dennishilgert/apollo/pkg/proto/fleet/v1;fleetpb";

service FleetManager {
  rpc Initialize(InitializeFunctionRequest) returns (apollo.proto.shared.v1.EmptyResponse) {}
  rpc Available(AvailableRunnerRequest) returns (AvailableRunnerResponse) {}
  rpc Provision(ProvisionRunnerRequest) returns (ProvisionRunnerResponse) {}
  rpc Invoke(InvokeFunctionRequest) returns (InvokeFunctionResponse) {}
}

message KernelSpecs {
  string name = 1;
  string version = 2;
}

message RuntimeSpecs {
  string name = 1;
  string version = 2;
}

message RuntimeExecutionSpecs {
  string name = 1;
  string version = 2;
  string handler = 3;
  string binary_path = 4;
  repeated string binary_args = 5;
}

message MachineSpecs {
  int32 memory_limit = 1;
  int32 vcpu_cores = 2;
  int32 idle_ttl = 3;
  string architecture = 4;
  optional string log_level = 5;
}

message EventSpecs {
  string uuid = 1;
  string type = 2;
  string source_ip = 3;
  map<string, string> params = 4;
  google.protobuf.Struct data = 5;
}

message InitializeFunctionRequest {
  string function_uuid = 1;
  KernelSpecs kernel = 2;
  RuntimeSpecs runtime = 3;
}

message AvailableRunnerRequest {
  string function_uuid = 1;
}

message AvailableRunnerResponse {
  string runner_uuid = 1;
}

message ProvisionRunnerRequest {
  string function_uuid = 1;
  KernelSpecs kernel = 2;
  RuntimeExecutionSpecs runtime = 3;
  MachineSpecs machine = 4;
}

message ProvisionRunnerResponse {
  string runner_uuid = 1;
}

message InvokeFunctionRequest {
  string runner_uuid = 1;
  string function_uuid = 2;
  EventSpecs event = 3; 
}

message InvokeFunctionResponse {
  string event_uuid = 1;
  int32 status = 2;
  string status_message = 3;
  google.protobuf.Struct data = 4;
}